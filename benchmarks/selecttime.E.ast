(
  (get_length num_one) := (ret (num_one))
  (experiment
    iterations) :=
    (if
       (ret ((iterations) > (0)))
     then
       (choose L5 for A;
        choose L5 for B;
        choose L5 for C;
        choose L5 for D;
        let
          (
            (rand_number) := (ret (100))
          )
        in
          (let
             (
               (modulo_result) := ((ret (get_length)) (ret (4)))
             )
           in
             (if
                (ret ((modulo_result) = (0)))
              then
                (choose L1 for A;
                 choose L1 for B;
                 choose L1 for C;
                 choose L1 for D;
                 let
                   (
                     (_) := ((ret (modulo_result)) ~> A)
                   )
                 in
                   ((experiment) (ret ((iterations) - (1)))))
              else
                (choose R1 for A;
                 choose R1 for B;
                 choose R1 for C;
                 choose R1 for D;
                 if
                   (ret ((modulo_result) = (1)))
                 then
                   (choose L2 for A;
                    choose L2 for B;
                    choose L2 for C;
                    choose L2 for D;
                    let
                      (
                        (_) := ((ret (modulo_result)) ~> B)
                      )
                    in
                      ((experiment) (ret ((iterations) - (1)))))
                 else
                   (choose R2 for A;
                    choose R2 for B;
                    choose R2 for C;
                    choose R2 for D;
                    if
                      (ret ((modulo_result) = (2)))
                    then
                      (choose L3 for A;
                       choose L3 for B;
                       choose L3 for C;
                       choose L3 for D;
                       let
                         (
                           (_) := ((ret (modulo_result)) ~> C)
                         )
                       in
                         ((experiment) (ret ((iterations) - (1)))))
                    else
                      (choose R3 for A;
                       choose R3 for B;
                       choose R3 for C;
                       choose R3 for D;
                       if
                         (ret ((modulo_result) = (3)))
                       then
                         (choose L4 for A;
                          choose L4 for B;
                          choose L4 for C;
                          choose L4 for D;
                          let
                            (
                              (_) := ((ret (modulo_result)) ~> D)
                            )
                          in
                            ((experiment) (ret ((iterations) - (1)))))
                       else
                         (choose R4 for A;
                          choose R4 for B;
                          choose R4 for C;
                          choose R4 for D;
                          (ret (print_string)) (ret ("Invalid Choice
")))))))))
     else
       (choose R5 for A;
        choose R5 for B;
        choose R5 for C;
        choose R5 for D;
        (ret (print_string)) (ret ("Select Time completed successfully"))))
  (main) := ((experiment) (ret (1)))
)
